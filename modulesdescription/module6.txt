¡Continuamos!

**Paso 6: Modelo de Componentes de Workout (Líneas de Ejercicio) (Punto #5 de tu lista)**

Este código va en un nuevo archivo: `mi_modulo_fitness/models/fitness_workout_line.py`.

**Archivo: `mi_modulo_fitness/models/fitness_workout_line.py`**
```python
# -*- coding: utf-8 -*-

from odoo import models, fields

class FitnessWorkoutLine(models.Model):
    _name = 'fitness.workout.line'
    _description = 'Línea/Componente de Ejercicio dentro de un Entrenamiento'
    _order = 'workout_id, sequence, id' # Ordenar por entrenamiento, luego por secuencia propia

    workout_id = fields.Many2one(
        comodel_name='fitness.workout',
        string="Entrenamiento Principal",
        required=True,
        ondelete='cascade', # Si se borra el entrenamiento, sus líneas también
        index=True
    )
    exercise_id = fields.Many2one(
        comodel_name='fitness.exercise',
        string="Ejercicio",
        required=True,
        ondelete='restrict', # No permitir borrar un ejercicio si está en uso aquí
        index=True
    )

    sequence = fields.Integer(
        string="Orden/Paso",
        default=10,
        help="Secuencia de este ejercicio/bloque dentro del entrenamiento."
    )

    # Definición de Series, Repeticiones, Descanso para la plantilla del workout
    # Usamos campos de texto para flexibilidad (ej. "8-12 reps", "AMRAP 10 min", "60-90s")
    sets_text = fields.Char(
        string="Series",
        help="Número o descripción de las series. Ej: 3, 4, Calentamiento: 2"
    )
    repetitions_text = fields.Char(
        string="Repeticiones / Duración",
        help="Rango de repeticiones o tiempo. Ej: 8-12, 15, AMRAP, 30s, Hasta el fallo."
    )
    rest_period_text = fields.Char(
        string="Descanso entre Series",
        help="Tiempo de descanso. Ej: 60s, 90-120s, Mínimo necesario."
    )
    
    # Tempo (si se usa frecuentemente, podría ser un campo separado)
    # tempo_text = fields.Char(string="Tempo", help="Ej: 2-0-1-0 (excéntrica-pausa-concéntrica-pausa)")

    special_instructions = fields.Text(
        string="Instrucciones Especiales / Técnica",
        help="Notas específicas sobre la ejecución, técnica, o enfoque para este ejercicio en este entrenamiento."
    )

    # Este modelo define la ESTRUCTURA del entrenamiento.
    # El rendimiento real (pesos, reps exactas, etc.) se registrará en 'fitness.exercise.performance'.
```
*Nota: He usado `sets_text` como Char para permitir descripciones como "3-4" o "Según RPE". Si siempre es un número fijo, `fields.Integer` sería una opción.*

**Actualización del archivo `models/__init__.py`:**

Añade la importación de `fitness_workout_line.py`.

**Archivo: `mi_modulo_fitness/models/__init__.py` (Actualizado)**
```python
# -*- coding: utf-8 -*-

from . import res_partner
from . import fitness_catalogs
from . import fitness_program
from . import fitness_workout
from . import fitness_exercise
from . import fitness_workout_line # Añadida esta línea
# from . import fitness_user_program # Siguiente...
```

---

**Listado de Modelos V1 (Estado Actual):**

**Realizados (Código Python Proporcionado):**

1.  **Información del Usuario (Extensión de `res.partner`)** (en `res_partner.py`)
2.  **Modelos Catálogo:** (todos en `fitness_catalogs.py`)
    * `fitness.difficulty`
    * `fitness.program.category`
    * `fitness.program.type`
    * `fitness.equipment`
    * `fitness.muscle.group`
    * `fitness.assessment.type` (Catálogo para el Punto #10)
    * `fitness.goal.type` (Catálogo para el Punto #12)
3.  **Programas de Entrenamiento (`fitness.program`)** (Punto #2, en `fitness_program.py`)
4.  **Entrenamientos/Workouts (`fitness.workout`)** (Punto #3, en `fitness_workout.py`)
5.  **Ejercicios (`fitness.exercise`)** (Punto #4, en `fitness_exercise.py`)
6.  **Componentes de Workout (`fitness.workout.line`)** (Punto #5, en `fitness_workout_line.py`)

**Pendientes (Según tu lista de V1, en orden aproximado de dependencia y numeración):**

* **Seguimiento de Progreso del Usuario (`fitness.user.program`)** (Punto #6) - *Este sería el siguiente.*
* **Mediciones Corporales (`fitness.body.measurement`)** (Punto #9)
* **Pruebas de Evaluación Física (`fitness.assessment`)** (Cuerpo del Punto #10)
* **Seguimiento de Nutrición (Modelos básicos)** (Punto #11)
    * `fitness.food.item`
    * `fitness.meal.log`
    * `fitness.meal.line`
* **Establecimiento de Metas (`fitness.goal`)** (Cuerpo del Punto #12)
* **Historial de Entrenamientos (`fitness.workout.history`)** (Punto #7)
* **Rendimiento en Ejercicios (`fitness.exercise.performance`)** (Punto #8)
* **Sistema de Logros (Modelos básicos)** (Punto #14)
    * `fitness.achievement`
    * `fitness.user.achievement`
* **Protocolo de Usuario (`fitness.user.protocol`)** (Punto #15)

---

El siguiente es el **Punto #6: Seguimiento de Progreso del Usuario (`fitness.user.program`)**. Este modelo vinculará a un usuario con un programa de entrenamiento.

¿Continuamos con `fitness.user.program`?